##長庚大學資管系 大數據分析方法作業二
#我很乖，有交作業
#我很乖，我有在電腦安裝好軟體
## 長庚大學資管系 大數據分析方法作業二
# 我很乖，有交作業
# 我很乖，我有在電腦安裝好軟體
# 長庚大學資管系 大數據分析方法作業二
## 我很乖，有交作業
## 我很乖，我有在電腦安裝好軟體
# 長庚大學資管系 大數據分析方法作業二
## 我很乖，有交作業
## 我很乖，我有在電腦安裝好軟體
?read
??read
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAACEdEose0cBAGzAW2JrtuYSx5ZAy7zv75qWmgMV0UzONan3DjbZBpYWVeTuOkXd8tToF1285Kw2w4NzM0ORGArPRrnwR0LLsYjh99iiTd4535fEOBMP6IlLjHkIAWy2LePpwhxVvAlBdt9KRYNKxtBCtoTUXxb5QVNngJ5I3RhfTvIxhyhW0M0CDrr4fxQ6FotKJdowZDZD'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
PostCount<-aggregate(id~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(PostCount$id,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$comments_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
SharesCount<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(SharesCount[order(SharesCount$shares_count,decreasing = T),]))
nrow(totalPage)
lapply(split(1:30,gl(3,10)),mean)
if (!require('choroplethr')){
install.packages("choroplethr")
library(choroplethr) ## for state_choropleth()
}
if (!require('choroplethrMaps')){
install.packages("choroplethrMaps") ##上次沒有安裝到這個package
library(choroplethrMaps) ## for state_choropleth()
}
data(df_pop_state)
state_choropleth(df_pop_state)
{r, warning=F,message=F}
if (!require('choroplethr')){
install.packages("choroplethr")
library(choroplethr) ## for state_choropleth()
}
if (!require('choroplethrMaps')){
install.packages("choroplethrMaps") ##上次沒有安裝到這個package
library(choroplethrMaps) ## for state_choropleth()
}
if (!require('choroplethr')){
install.packages("choroplethr")
library(choroplethr) ## for state_choropleth()
}
if (!require('choroplethrMaps')){
install.packages("choroplethrMaps") ##上次沒有安裝到這個package
library(choroplethrMaps) ## for state_choropleth()
}
if (!require('choroplethr')){
install.packages("choroplethr")
library(choroplethr) ## for state_choropleth()
}
r, warning=F,message=F
data(df_pop_state)
state_choropleth(df_pop_state)
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名
library(ggplot2) #for fortify(), ggplot(), ggmap()
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
final.plot<-merge(tw_new.df,mydata,by="id",all.x=T)
library(RColorBrewer) #配色用brewer.pal( 9 , "Reds" )
twcmap<-ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = prevalence),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"))+
theme_void()+
labs(title="Prevalence of X in Taiwan")
twcmap
twcmap
twcmap<-ggplot()
twcmap<-ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = prevalence),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"))+
theme_void()+
labs(title="Prevalence of X in Taiwan")
data(df_pop_state)
data(df_pop_state) #記載各州人口數的資料
state_choropleth(df_pop_state)
{r, echo=F, warning=F,message=F, fig.height=4}
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名
library(ggplot2) #for fortify(), ggplot(), ggmap()
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
final.plot<-merge(tw_new.df,mydata,by="id",all.x=T)
library(RColorBrewer) #配色用brewer.pal( 9 , "Reds" )
twcmap<-ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = prevalence),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"))+
theme_void()+
labs(title="Prevalence of X in Taiwan")
twcmap
twcmap()
if(!require('rgdal')){#forfortify()
install.packages("rgdal");library(rgdal)
}
if(!require('rgeos')){#forfortify()
install.packages("rgeos");library(rgeos)
}
if(!require('maptools')){#forreadShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new<-readShapeSpatial("Taiwan/Town_MOI_1041215.shp")#檔名
names(tw_new)
if(!require('rgdal')){#forfortify()
install.packages("rgdal");library(rgdal)
}
if(!require('rgeos')){#forfortify()
install.packages("rgeos");library(rgeos)
}
if(!require('maptools')){#forreadShapeSpatial()
install.packages("maptools");library(maptools)
}
names(tw_new)
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名
library(ggplot2) #for fortify(), ggplot(), ggmap()
tw_new.df <- fortify(tw_new, region = "T_UID") #from ggplot2 package
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
final.plot<-merge(tw_new.df,mydata,by="id",all.x=T)
library(RColorBrewer) #配色用brewer.pal( 9 , "Reds" )
twcmap<-ggplot() +
geom_polygon(data = final.plot,
aes(x = long, y = lat, group = group,
fill = prevalence),
color = "black", size = 0.25) +
coord_map()+#維持地圖比例
scale_fill_gradientn(colours = brewer.pal(9,"Reds"))+
theme_void()+
labs(title="Prevalence of X in Taiwan")
twcmap
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Taiwan/Town_MOI_1041215.shp") #檔名
names(tw_new)
if (!require('rgdal')){#for fortify()
install.packages("rgdal");library(rgdal)
}
if (!require('rgeos')){#for fortify()
install.packages("rgeos");library(rgeos)
}
if (!require('maptools')){#for readShapeSpatial()
install.packages("maptools");library(maptools)
}
tw_new <- readShapeSpatial("Town_MOI_1041215.shp") #檔名
names(tw_new)
library(ggplot2) #for fortify(), ggplot(), ggmap()
head(tw_new$Town_ID)
tw_new.df <- fortify(tw_new, region = "T_UID")
head(tw_new.df,10)
mydata<-data.frame(NAME_2=tw_new$T_Name, id=tw_new$T_UID,
prevalence=rnorm(length(tw_new$T_UID)))
head(mydata)
mydata$NAME_2<-iconv(as.character(mydata$NAME_2), #NAME_2原本是factor
from="big5", to = "UTF-8")
head(mydata,10)
if (!require('ggmap')){
install.packages("ggmap")
library(ggmap)#for get_map()
}
twmap <- get_map(location = 'Taiwan', zoom = 7,language = "zh-TW")
ggmap(twmap)
